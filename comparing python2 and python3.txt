In Python, the "+" operator is used to make the append/concatenation with
strings and not only to sum numbers.

In Python 3, the parenthesis are required: print "Hello, World" raises syntax
error. Also, the concatenation of strings in the print instruction works
differently: print ("Hello", "World", end='!') would produce "Hello World!".
In Python 2, print ("Hello", "World") would produce ('Hello', 'World').
The "sep" and "end" parameters didn't exist in Python 2.

Also, the input() function in Python 2 would return integer and string type
based on the value rather than being character string by default. The
raw_input() function would return character string as default. All of this
was considered bad practice.

In Python 3, all functions use parenthesis "()".

The round() function also changed in Python3 in comparison to Python2.
in Python2 its return was a float and in Python3 is an integer. Also, Python3
uses the Banker's rounding which means 4.5 will be rounded to 4.0 instead of
5.0.

In Python there's an additional division operator. The "//" is called integer
division and always returns an integer (doesn't round it).
